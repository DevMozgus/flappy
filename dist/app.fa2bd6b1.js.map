{"version":3,"sources":["app.js"],"names":["context","c","getContext","birdUp","Image","src","mubuUp","birdDown","mubuDown","interval","pipeWidth","topPipeBottomY","canvasSize","pipeX","audio","Audio","audioFile","bestScore","score","birdX","birdDY","birdY","pipeGap","birdSize","startButton","document","querySelector","gamePaused","onclick","game","setInterval","fillStyle","fillRect","drawImage","fillText","play","Math","random","addEventListener"],"mappings":";;;;;;;AA+EA,aA/EA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,eA6EA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA3EA,IAAMA,EAAUC,EAAEC,WAAW,MACvBC,EAAS,IAAIC,MACnBD,EAAOE,IAAMC,EAAb,QACA,IAAMC,EAAW,IAAIH,MACrBG,EAASF,IAAMG,EAAf,QACA,IASIC,EAAUC,EAAWC,EAGrBC,EAAYC,EAZVC,EAAQ,IAAIC,MAAMC,EAAV,SACVC,EAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,EAAS,EAETC,EAAQ,IACRC,EAAU,IACVC,EAAW,GAGfd,EAAWC,EAAYC,EAAiB,GAExCC,EAAaC,EAAQ,IACrB,IAAMW,EAAcC,SAASC,cAAc,gBACvCC,GAAa,EAGjB1B,EAAE2B,QAAU,WAAOR,OAAAA,EAAS,IAE5B,IAAMS,EAAOC,YAAY,WACvB9B,EAAQ+B,UAAY,UACpB/B,EAAQgC,SAAS,EAAG,EAAGpB,EAAYA,GAG/BQ,EAAS,EACXpB,EAAQiC,UAAU9B,EAAQgB,EAAOE,EAAOE,GAAY,IAAM,KAAMA,GAEhEvB,EAAQiC,UAAU1B,EAAUY,EAAOE,EAAOE,GAAY,IAAM,KAAMA,GAGpEvB,EAAQ+B,UAAY,QACpB/B,EAAQgC,SAASnB,EAAO,EAAGH,EAAWC,GAEtCX,EAAQgC,SAASnB,EAAOF,EAAiBW,EAASZ,EAAWE,GAE7DZ,EAAQ+B,UAAY,QACpB/B,EAAQkC,SAAqBhB,YAAAA,OAAAA,GAAS,EAAG,IACzClB,EAAQkC,SAAkBjB,SAAAA,OAAAA,GAAa,EAAG,IAGrCU,IACHN,GAASD,GAAU,GACnBP,GAAS,EAETI,EAAYA,IADZC,EACgCA,EAAQD,IAKxCI,EAAQT,IACNS,EAAQV,GAAkBU,EAAQV,EAAiBW,IACnDT,EAAQU,GAAY,IAAM,QAE5BT,EAAMqB,OACNf,EAAS,EACTC,EAAQ,IACRR,EAAQD,EACRD,EAAiB,GACjBO,EAAQ,EACRS,GAAa,GAIXd,GAASH,IACXG,EAAQD,EACRD,EAAiBW,EAAUc,KAAKC,WAEjC5B,GAEHe,EAAYc,iBAAiB,QAAS,WAAOX,OAAAA,GAAa","file":"app.fa2bd6b1.js","sourceRoot":"../src","sourcesContent":["import mubuUp from \"./mubuUp.png\";\nimport mubuDown from \"./mubuDown.png\";\nimport audioFile from \"./bruh.mp3\";\n\nconst context = c.getContext(\"2d\");\nconst birdUp = new Image();\nbirdUp.src = mubuUp;\nconst birdDown = new Image();\nbirdDown.src = mubuDown;\nconst audio = new Audio(audioFile);\nlet bestScore = 0;\nlet score = 0;\nlet birdX = 0;\nlet birdDY = 0;\n\nlet birdY = 300;\nlet pipeGap = 200;\nlet birdSize = 72;\nlet interval, pipeWidth, topPipeBottomY;\n\ninterval = pipeWidth = topPipeBottomY = 24; // fps is 1000 / value (i.e. 1000/24 = 42 fps)\nlet canvasSize, pipeX;\ncanvasSize = pipeX = 600;\nconst startButton = document.querySelector(\"#startButton\");\nlet gamePaused = true;\n\n// Jump on click\nc.onclick = () => (birdDY = 11);\n\nconst game = setInterval(() => {\n  context.fillStyle = \"skyblue\";\n  context.fillRect(0, 0, canvasSize, canvasSize); // Draws sky\n\n  // bird img changes depending on y velocity\n  if (birdDY > 0) {\n    context.drawImage(birdUp, birdX, birdY, birdSize * (524 / 374), birdSize);\n  } else {\n    context.drawImage(birdDown, birdX, birdY, birdSize * (524 / 374), birdSize);\n  }\n\n  context.fillStyle = \"green\";\n  context.fillRect(pipeX, 0, pipeWidth, topPipeBottomY); // draws top pipe\n\n  context.fillRect(pipeX, topPipeBottomY + pipeGap, pipeWidth, canvasSize); // draws bottom pipe\n\n  context.fillStyle = \"black\";\n  context.fillText(`Current: ${score}`, 9, 25); // draws score\n  context.fillText(`Best: ${bestScore}`, 9, 50);\n\n  // if game is paused don't move\n  if (!gamePaused) {\n    birdY -= birdDY -= 0.5; // gravity\n    pipeX -= 8;\n    score++;\n    bestScore = bestScore < score ? score : bestScore;\n  }\n\n  // resets game on death\n  if (\n    birdY > canvasSize ||\n    ((birdY < topPipeBottomY || birdY > topPipeBottomY + pipeGap) &&\n      pipeX < birdSize * (524 / 374))\n  ) {\n    audio.play();\n    birdDY = 0;\n    birdY = 300;\n    pipeX = canvasSize;\n    topPipeBottomY = 24;\n    score = 0;\n    gamePaused = true;\n  }\n\n  // generates new pipes\n  if (pipeX < -pipeWidth) {\n    pipeX = canvasSize;\n    topPipeBottomY = pipeGap * Math.random();\n  }\n}, interval);\n\nstartButton.addEventListener(\"click\", () => (gamePaused = false));\n"]}